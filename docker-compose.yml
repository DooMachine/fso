version: '3'
services:
  identityprovider:
    image: identityprovider
    container_name: fsoidentityprovider
    build:
      context: src/fso.IdentityProvider/
      dockerfile: Dockerfile
    expose:
      - "5000"
    ports:
      - "5000:5000"    
    links:
      - mysqldb
      - rabbitmq
    depends_on:
      - mysqldb
      - rabbitmq
    networks:
      - localnet

  identitybuslistener:
    image: identitybuslistener
    container_name: fsoidentitybuslistener
    build:
      context: src/fso.IdentityBusListener/
      dockerfile: Dockerfile 
    links:
      - mysqldb
      - rabbitmq
    depends_on:
      - mysqldb
      - rabbitmq
    networks:
      - localnet
    stdin_open: true
    tty: true
  eventbuslistener:
    image: eventbuslistener
    container_name: fsoeventbuslistener
    build:
      context: src/fso.EventBusListener/
      dockerfile: Dockerfile 
    links:
      - mysqldb
      - rabbitmq
    depends_on:
      - mysqldb
      - rabbitmq
    networks:
      - localnet
    stdin_open: true
    tty: true

  notificationbuslistener:
    image: notificationbuslistener
    container_name: fsonotificationbuslistener
    build:
      context: src/fso.NotificationBusListener/
      dockerfile: Dockerfile 
    links:
      - mysqldb
      - rabbitmq
    depends_on:
      - mysqldb
      - rabbitmq
    networks:
      - localnet
    stdin_open: true
    tty: true

  appmediaprovider:
    image: appmediaprovider
    container_name: fsoappmediaprovider
    build:
      context: src/fso.AppMediaProvider/
      dockerfile: Dockerfile
    expose:
      - "7100"
    ports:
      - "7100:7100"    
    links:
      - rabbitmq
    depends_on:
      - rabbitmq
      - identityprovider
    networks:
      - localnet

  notificationapi:
    image: notificationapi
    container_name: fsonotificationapi
    build:
      context: src/fso.NotificationApi/
      dockerfile: Dockerfile
    expose:
      - "6900"
    ports:
      - "6900:6900"    
    links:
      - mysqldb
      - rabbitmq
    depends_on:
      - mysqldb
      - rabbitmq
      - identityprovider
    networks:
      - localnet

  mainapi:
    image: mainapi
    container_name: fsomainapi
    build:
      context: src/fso.Api/
      dockerfile: Dockerfile
    expose:
      - "7000"
    ports:
      - "7000:7000"    
    links:
      - mysqldb
      - rabbitmq
    depends_on:
      - mysqldb
      - rabbitmq
      - identityprovider
    networks:
      - localnet

  webclient:
    image: webclient
    container_name: fsowebclient
    build:
      context: src/fso.webclient/fso.webclient/
      dockerfile: Dockerfile
    expose:
      - "10575"   
    ports:
      - "10575:10575"
    depends_on:
      - mainapi
      - notificationapi
      - appmediaprovider
      - identityprovider
    networks:
      - localnet

  mysqldb:
    image: mysql/mysql-server:5.7
    container_name: mysqlc
    command: mysqld --user=root --verbose
    ports:
      - "3306:3306"
    environment:
      MYSQL_USER: "seph"
      MYSQL_PASSWORD: "seph1w12"
      MYSQL_ROOT_HOST: "%"
      MYSQL_ROOT_PASSWORD: "seph1w12"
      MYSQL_ALLOW_EMPTY_PASSWORD: "true"
    volumes:
      - my-datavolume:/var/lib/mysql
    networks:
      - localnet

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmqc
    volumes:
        - rabbit-volume:/var/lib/rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
      - "5671:5671"
    environment: 
      RABBITMQ_DEFAULT_PASS: seph1w12
      RABBITMQ_DEFAULT_USER: seph
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:15672"]
        interval: 30s
        timeout: 10s
        retries: 5  
    networks:
      - localnet

  nginx:
    image: nginxhttp
    container_name: nginxc
    ports:
      - "80:80"
      - "443:443"
    build:
      context: nginx/
      dockerfile: Dockerfile
    links:
      - identityprovider
      - webclient
      - mainapi
      - notificationapi
      - appmediaprovider
    networks:
      - localnet

networks:
  localnet:
volumes:
  my-datavolume:
  rabbit-volume: